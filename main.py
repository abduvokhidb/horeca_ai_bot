import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters
import openai
from config import BOT_TOKEN, OPENAI_API_KEY

openai.api_key = OPENAI_API_KEY
logging.basicConfig(level=logging.INFO)

keyboard = ReplyKeyboardMarkup([
    ["üìä –û—Ç—á—ë—Ç –∑–∞ –¥–µ–Ω—å", "üìà –î–µ—à–±–æ—Ä–¥ (PDF)"],
    ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
], resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HORECA AI Bot!", reply_markup=keyboard)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üìä –û—Ç—á—ë—Ç –∑–∞ –¥–µ–Ω—å":
        await update.message.reply_text("üíµ –í—ã—Ä—É—á–∫–∞: 12,480,000 —Å—É–º\nüßæ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 67,826 —Å—É–º\nüë• –ì–æ—Å—Ç–µ–π: 184\n\nüçΩ –¢–û–ü-3 –±–ª—é–¥–∞:\n1. –ê–¥–∞–Ω–∞ –∫–µ–±–∞–± ‚Äî 58\n2. –õ–∞—Ö–º–∞–¥–∂—É–Ω ‚Äî 46\n3. –ß–∞–π —Ç—É—Ä–µ—Ü–∫–∏–π ‚Äî 102")
    elif text == "üìà –î–µ—à–±–æ—Ä–¥ (PDF)":
        await update.message.reply_text("üìé PDF-–¥–µ—à–±–æ—Ä–¥ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.")
    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await update.message.reply_text("‚öôÔ∏è –†–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    elif text == "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç.")
        context.user_data["awaiting_question"] = True
    elif context.user_data.get("awaiting_question"):
        await update.message.chat.send_action(action="typing")
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∑–Ω–∞–µ—à—å –≤—Å—ë –æ –∫—É—Ö–Ω–µ, –ø–µ—Ä—Å–æ–Ω–∞–ª–µ, iiko, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö, –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–æ—Ñ–µ–π–Ω–µ–π."},
                {"role": "user", "content": text}
            ],
            temperature=0.5
        )
        answer = response["choices"][0]["message"]["content"]
        await update.message.reply_text(answer)
        context.user_data["awaiting_question"] = False

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

if __name__ == "__main__":
    app.run_polling()
